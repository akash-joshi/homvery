{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useLocalStorage } from \"react-use\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"../components/user/Header\";\nexport default function Index() {\n  const [login, setLogin] = useLocalStorage(\"login\", false);\n  const {\n    0: user,\n    1: setUsers\n  } = useState(\"\");\n  const [admin, setAdmin] = useLocalStorage(\"admin\", false);\n  const [username, setUsername] = useLocalStorage(\"username\", \"\");\n  useEffect(() => {\n    if (!login || admin) location.href = \"/login\";\n    axios.get(`/api/user?phone=${username}`).then(r => {\n      setUsers(r.data.result);\n    });\n  }, []);\n  return __jsx(\"section\", null, __jsx(Header, null), __jsx(\"section\", {\n    style: {\n      width: \"100vw\",\n      textAlign: \"center\"\n    },\n    className: \"text-center vsc-initialized\"\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: \"5em\",\n      padding: \"1em\"\n    }\n  }, __jsx(\"i\", {\n    width: \"72\",\n    height: \"72\",\n    className: \"mb-4 material-icons\"\n  }, \"home\"), __jsx(\"h1\", {\n    className: \"h3 mb-3 font-weight-normal\"\n  }, \"Hello \", username, \" !\"), user.tasks ? __jsx(React.Fragment, null, \"Your tasks are :\", user.tasks.map((task, index) => __jsx(\"div\", {\n    style: {\n      marginTop: \"1em\"\n    },\n    key: index,\n    className: \"ml-auto mr-auto card container\"\n  }, __jsx(\"div\", {\n    className: \"card-body\",\n    style: {\n      textAlign: \"left\"\n    }\n  }, __jsx(\"b\", null, \"Task Name\"), __jsx(\"br\", null), task.taskName, __jsx(\"br\", null), __jsx(\"b\", null, \"Address\"), __jsx(\"br\", null), task.address, __jsx(\"br\", null), __jsx(\"b\", null, \"Task Assigned At\"), __jsx(\"br\", null), moment(task.createdAt).format(\"MMMM Do YYYY, h:mm:ss a\"))))) : \"You have no tasks assigned !\", __jsx(\"p\", {\n    className: \"mt-5 mb-3 text-muted\"\n  }, \"\\xA9 2019 - Homvery\"))));\n}","map":null,"metadata":{},"sourceType":"module"}